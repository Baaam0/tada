generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  image     String?
  createdAt DateTime @default(now())
  taskLists TaskList[]
  accounts  Account[]
  sessions  Session[]
}

model TaskList {
  id        Int      @id @default(autoincrement())
  title     String   @db.Text
  userId    String   
  user      User     @relation(fields: [userId], references: [id])
  tasks     Task[]
  createdAt DateTime @default(now())
}

model Task {
  id           Int      @id @default(autoincrement())
  title        String
  description  String?
  dueDate      DateTime?
  priority     String?
  taskListId   Int
  taskList     TaskList @relation(fields: [taskListId], references: [id])
  createdAt    DateTime @default(now())
}


model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refreshToken      String? @db.Text
  accessToken       String? @db.Text
  expiresAt         Int?
  tokenType         String?
  scope             String?
  idToken           String? @db.Text
  sessionState      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

    @@unique([identifier, token])
}

